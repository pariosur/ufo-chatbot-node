"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.request = void 0;
class FetchError extends Error {
    constructor(message, response, status, serverMessage) {
        super(message);
        this.name = 'FetchError';
        this.response = response;
        this.status = status;
        this.serverMessage = serverMessage;
    }
}
function request(url, options) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield fetch(url, options);
        let data = null;
        try {
            data = yield response.json();
        }
        catch (error) { }
        if (!response.ok) {
            const errMsg = (data === null || data === void 0 ? void 0 : data.message)
                ? `Error status code: ${response.status}. ${data.message}`
                : `Error status code: ${response.status}.`;
            const err = new FetchError(errMsg, response, response.status, data === null || data === void 0 ? void 0 : data.message);
            throw err;
        }
        return (_a = data === null || data === void 0 ? void 0 : data.data) !== null && _a !== void 0 ? _a : data;
    });
}
exports.request = request;
